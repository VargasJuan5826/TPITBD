DELIMITER $$
CREATE PROCEDURE `NewUsuarioCuenta`(IN `nombreUsuario` VARCHAR(45), IN `idMedidor_param` VARCHAR(20), OUT `resultado` BOOLEAN)
BEGIN
    DECLARE resultado_local BOOLEAN DEFAULT false;
    DECLARE idUsuario INT;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
        SET resultado_local = false;
    END;

    START TRANSACTION;

    -- Insertar el usuario
    INSERT INTO Usuario (nombreUsuario, fechaAlta) VALUES (nombreUsuario, CURRENT_TIMESTAMP);

    -- Obtener el id del usuario insertado
    SET idUsuario = LAST_INSERT_ID();

    -- Obtener el modelo del medidor
    SELECT modeloMedidor INTO @modeloMedidor FROM Medidor WHERE idMedidor = idMedidor_param;

    -- Verificar si el medidor existe
    IF @modeloMedidor IS NULL THEN
        ROLLBACK;
        SET resultado_local = false;
    ELSE
        -- Insertar la cuenta si existe el medidor
        INSERT INTO Cuenta (fechaAlta, Usuario_idUsuario, Medidor_idMedidor) VALUES (CURRENT_TIMESTAMP, idUsuario, idMedidor_param);
        SET resultado_local = true;
    END IF;

    COMMIT;

    SET resultado = resultado_local;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`root`@`%` PROCEDURE `GetUsuarios`()
BEGIN
    SELECT C.idCuenta, U.nombreUsuario FROM Cuenta C INNER JOIN Usuario U ON C.Usuario_idUsuario = U.idUsuario;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`root`@`%` PROCEDURE `GetConceptos`()
BEGIN
    SELECT idConcepto, nombreConcepto FROM Concepto;
END$$
DELIMITER ;

-- MAQUETA DE GENERATEFACTURA, REMPLAZAR POR EL QUE VA

DELIMITER $$
CREATE DEFINER=`root`@`%` PROCEDURE `GenerateFactura`(IN `periodo` DATE)
BEGIN
    -- Devolver datos maqueteados como ejemplo
    SELECT 
        1 AS idFactura,
        CURRENT_TIMESTAMP() AS fechaEmision,
        100.00 AS consumo,
        50.00 AS totalPagar,
        periodo AS mediciones_periodo,
        1 AS cuenta_idCuenta,
        'Nombre Cliente' AS nombreCliente
    FROM
        dual;
END$$
DELIMITER ;
